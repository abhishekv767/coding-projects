[DEBUG]2023-04-13 16:42:03,402: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:42:03,403: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:42:03,403: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:42:03,407: None
[DEBUG]2023-04-13 16:42:03,407: None
[DEBUG]2023-04-13 16:42:03,408: None
[DEBUG]2023-04-13 16:42:03,408: None
[DEBUG]2023-04-13 16:42:03,408: None
[DEBUG]2023-04-13 16:42:03,410: None
[DEBUG]2023-04-13 16:42:03,410: None
[DEBUG]2023-04-13 16:42:03,410: None
[DEBUG]2023-04-13 16:42:03,410: None
[DEBUG]2023-04-13 16:42:03,411: None
[DEBUG]2023-04-13 16:42:03,411: None
[DEBUG]2023-04-13 16:42:03,411: None
[DEBUG]2023-04-13 16:42:03,411: None
[DEBUG]2023-04-13 16:42:03,411: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,413: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,414: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,415: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,416: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,417: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,418: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,419: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,421: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,422: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,423: None
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,424: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,425: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,426: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:42:03,427: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,185: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:43:09,186: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:43:09,186: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:43:09,187: None
[DEBUG]2023-04-13 16:43:09,187: None
[DEBUG]2023-04-13 16:43:09,188: None
[DEBUG]2023-04-13 16:43:09,188: None
[DEBUG]2023-04-13 16:43:09,188: None
[DEBUG]2023-04-13 16:43:09,189: None
[DEBUG]2023-04-13 16:43:09,189: None
[DEBUG]2023-04-13 16:43:09,189: None
[DEBUG]2023-04-13 16:43:09,189: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,190: None
[DEBUG]2023-04-13 16:43:09,191: None
[DEBUG]2023-04-13 16:43:09,191: None
[DEBUG]2023-04-13 16:43:09,191: None
[DEBUG]2023-04-13 16:43:09,191: None
[DEBUG]2023-04-13 16:43:09,191: None
[DEBUG]2023-04-13 16:43:09,191: None
[DEBUG]2023-04-13 16:43:09,191: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,192: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,193: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,194: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,195: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,196: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,197: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,198: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,199: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,201: None
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,202: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,203: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,205: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:09,206: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,522: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:43:35,523: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:43:35,523: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:43:35,525: None
[DEBUG]2023-04-13 16:43:35,525: None
[DEBUG]2023-04-13 16:43:35,526: None
[DEBUG]2023-04-13 16:43:35,526: None
[DEBUG]2023-04-13 16:43:35,526: None
[DEBUG]2023-04-13 16:43:35,527: None
[DEBUG]2023-04-13 16:43:35,527: None
[DEBUG]2023-04-13 16:43:35,527: None
[DEBUG]2023-04-13 16:43:35,527: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,528: None
[DEBUG]2023-04-13 16:43:35,529: None
[DEBUG]2023-04-13 16:43:35,529: None
[DEBUG]2023-04-13 16:43:35,529: None
[DEBUG]2023-04-13 16:43:35,529: None
[DEBUG]2023-04-13 16:43:35,529: None
[DEBUG]2023-04-13 16:43:35,529: None
[DEBUG]2023-04-13 16:43:35,529: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,530: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,532: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,533: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,535: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,536: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,537: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,539: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,540: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,541: None
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,542: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,543: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,544: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,545: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:43:35,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,637: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:44:07,637: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:44:07,637: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:44:07,639: None
[DEBUG]2023-04-13 16:44:07,639: None
[DEBUG]2023-04-13 16:44:07,640: None
[DEBUG]2023-04-13 16:44:07,640: None
[DEBUG]2023-04-13 16:44:07,640: None
[DEBUG]2023-04-13 16:44:07,640: None
[DEBUG]2023-04-13 16:44:07,640: None
[DEBUG]2023-04-13 16:44:07,640: None
[DEBUG]2023-04-13 16:44:07,640: None
[DEBUG]2023-04-13 16:44:07,641: None
[DEBUG]2023-04-13 16:44:07,641: None
[DEBUG]2023-04-13 16:44:07,641: None
[DEBUG]2023-04-13 16:44:07,641: None
[DEBUG]2023-04-13 16:44:07,641: None
[DEBUG]2023-04-13 16:44:07,642: None
[DEBUG]2023-04-13 16:44:07,642: None
[DEBUG]2023-04-13 16:44:07,642: None
[DEBUG]2023-04-13 16:44:07,642: None
[DEBUG]2023-04-13 16:44:07,642: None
[DEBUG]2023-04-13 16:44:07,642: None
[DEBUG]2023-04-13 16:44:07,643: None
[DEBUG]2023-04-13 16:44:07,643: None
[DEBUG]2023-04-13 16:44:07,643: None
[DEBUG]2023-04-13 16:44:07,643: None
[DEBUG]2023-04-13 16:44:07,643: None
[DEBUG]2023-04-13 16:44:07,643: None
[DEBUG]2023-04-13 16:44:07,643: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,644: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,646: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,647: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,649: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,650: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,652: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,653: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,655: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,656: None
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,658: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,660: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:07,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,376: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:44:30,376: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:44:30,376: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:44:30,378: None
[DEBUG]2023-04-13 16:44:30,378: None
[DEBUG]2023-04-13 16:44:30,378: None
[DEBUG]2023-04-13 16:44:30,378: None
[DEBUG]2023-04-13 16:44:30,378: None
[DEBUG]2023-04-13 16:44:30,379: None
[DEBUG]2023-04-13 16:44:30,379: None
[DEBUG]2023-04-13 16:44:30,379: None
[DEBUG]2023-04-13 16:44:30,379: None
[DEBUG]2023-04-13 16:44:30,380: None
[DEBUG]2023-04-13 16:44:30,380: None
[DEBUG]2023-04-13 16:44:30,380: None
[DEBUG]2023-04-13 16:44:30,380: None
[DEBUG]2023-04-13 16:44:30,380: None
[DEBUG]2023-04-13 16:44:30,381: None
[DEBUG]2023-04-13 16:44:30,381: None
[DEBUG]2023-04-13 16:44:30,381: None
[DEBUG]2023-04-13 16:44:30,381: None
[DEBUG]2023-04-13 16:44:30,381: None
[DEBUG]2023-04-13 16:44:30,381: None
[DEBUG]2023-04-13 16:44:30,382: None
[DEBUG]2023-04-13 16:44:30,382: None
[DEBUG]2023-04-13 16:44:30,382: None
[DEBUG]2023-04-13 16:44:30,382: None
[DEBUG]2023-04-13 16:44:30,382: None
[DEBUG]2023-04-13 16:44:30,382: None
[DEBUG]2023-04-13 16:44:30,382: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,384: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,385: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,386: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,387: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,388: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,389: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,390: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,391: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,392: None
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,393: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,394: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,396: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:30,397: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,250: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:44:46,250: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:44:46,250: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:44:46,252: None
[DEBUG]2023-04-13 16:44:46,252: None
[DEBUG]2023-04-13 16:44:46,253: None
[DEBUG]2023-04-13 16:44:46,253: None
[DEBUG]2023-04-13 16:44:46,253: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,254: None
[DEBUG]2023-04-13 16:44:46,255: None
[DEBUG]2023-04-13 16:44:46,255: None
[DEBUG]2023-04-13 16:44:46,255: None
[DEBUG]2023-04-13 16:44:46,255: None
[DEBUG]2023-04-13 16:44:46,255: None
[DEBUG]2023-04-13 16:44:46,255: None
[DEBUG]2023-04-13 16:44:46,256: None
[DEBUG]2023-04-13 16:44:46,256: None
[DEBUG]2023-04-13 16:44:46,256: None
[DEBUG]2023-04-13 16:44:46,256: None
[DEBUG]2023-04-13 16:44:46,256: None
[DEBUG]2023-04-13 16:44:46,256: None
[DEBUG]2023-04-13 16:44:46,256: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,257: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,258: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,259: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,260: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,261: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,262: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,263: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,264: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,265: None
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,266: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,267: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,268: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,269: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:44:46,270: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,881: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:45:08,882: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:45:08,882: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:45:08,884: None
[DEBUG]2023-04-13 16:45:08,884: None
[DEBUG]2023-04-13 16:45:08,885: None
[DEBUG]2023-04-13 16:45:08,885: None
[DEBUG]2023-04-13 16:45:08,885: None
[DEBUG]2023-04-13 16:45:08,887: None
[DEBUG]2023-04-13 16:45:08,887: None
[DEBUG]2023-04-13 16:45:08,887: None
[DEBUG]2023-04-13 16:45:08,887: None
[DEBUG]2023-04-13 16:45:08,888: None
[DEBUG]2023-04-13 16:45:08,888: None
[DEBUG]2023-04-13 16:45:08,888: None
[DEBUG]2023-04-13 16:45:08,888: None
[DEBUG]2023-04-13 16:45:08,888: None
[DEBUG]2023-04-13 16:45:08,889: None
[DEBUG]2023-04-13 16:45:08,889: None
[DEBUG]2023-04-13 16:45:08,889: None
[DEBUG]2023-04-13 16:45:08,889: None
[DEBUG]2023-04-13 16:45:08,889: None
[DEBUG]2023-04-13 16:45:08,889: None
[DEBUG]2023-04-13 16:45:08,890: None
[DEBUG]2023-04-13 16:45:08,890: None
[DEBUG]2023-04-13 16:45:08,890: None
[DEBUG]2023-04-13 16:45:08,890: None
[DEBUG]2023-04-13 16:45:08,890: None
[DEBUG]2023-04-13 16:45:08,890: None
[DEBUG]2023-04-13 16:45:08,890: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,892: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,893: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,895: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,896: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,897: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,898: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,900: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,902: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,903: None
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,905: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,906: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,908: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:45:08,909: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,469: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:46:21,469: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:46:21,470: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:46:21,473: None
[DEBUG]2023-04-13 16:46:21,473: None
[DEBUG]2023-04-13 16:46:21,474: None
[DEBUG]2023-04-13 16:46:21,474: None
[DEBUG]2023-04-13 16:46:21,474: None
[DEBUG]2023-04-13 16:46:21,475: None
[DEBUG]2023-04-13 16:46:21,475: None
[DEBUG]2023-04-13 16:46:21,475: None
[DEBUG]2023-04-13 16:46:21,475: None
[DEBUG]2023-04-13 16:46:21,476: None
[DEBUG]2023-04-13 16:46:21,476: None
[DEBUG]2023-04-13 16:46:21,476: None
[DEBUG]2023-04-13 16:46:21,476: None
[DEBUG]2023-04-13 16:46:21,476: None
[DEBUG]2023-04-13 16:46:21,477: None
[DEBUG]2023-04-13 16:46:21,477: None
[DEBUG]2023-04-13 16:46:21,477: None
[DEBUG]2023-04-13 16:46:21,477: None
[DEBUG]2023-04-13 16:46:21,477: None
[DEBUG]2023-04-13 16:46:21,477: None
[DEBUG]2023-04-13 16:46:21,478: None
[DEBUG]2023-04-13 16:46:21,478: None
[DEBUG]2023-04-13 16:46:21,478: None
[DEBUG]2023-04-13 16:46:21,478: None
[DEBUG]2023-04-13 16:46:21,478: None
[DEBUG]2023-04-13 16:46:21,478: None
[DEBUG]2023-04-13 16:46:21,478: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,479: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,480: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,482: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,484: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,486: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,487: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,489: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,491: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,493: None
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,495: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,496: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,497: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,499: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,500: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:46:21,501: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,919: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:47:13,919: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:47:13,919: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:47:13,921: None
[DEBUG]2023-04-13 16:47:13,921: None
[DEBUG]2023-04-13 16:47:13,921: None
[DEBUG]2023-04-13 16:47:13,921: None
[DEBUG]2023-04-13 16:47:13,921: None
[DEBUG]2023-04-13 16:47:13,922: None
[DEBUG]2023-04-13 16:47:13,922: None
[DEBUG]2023-04-13 16:47:13,922: None
[DEBUG]2023-04-13 16:47:13,922: None
[DEBUG]2023-04-13 16:47:13,923: None
[DEBUG]2023-04-13 16:47:13,923: None
[DEBUG]2023-04-13 16:47:13,923: None
[DEBUG]2023-04-13 16:47:13,923: None
[DEBUG]2023-04-13 16:47:13,923: None
[DEBUG]2023-04-13 16:47:13,924: None
[DEBUG]2023-04-13 16:47:13,924: None
[DEBUG]2023-04-13 16:47:13,924: None
[DEBUG]2023-04-13 16:47:13,924: None
[DEBUG]2023-04-13 16:47:13,924: None
[DEBUG]2023-04-13 16:47:13,924: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,925: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,926: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,927: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,928: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,929: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,930: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,931: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,932: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,933: None
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,935: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,936: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,937: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:13,938: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,177: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:47:24,177: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:47:24,177: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:47:24,179: None
[DEBUG]2023-04-13 16:47:24,179: None
[DEBUG]2023-04-13 16:47:24,179: None
[DEBUG]2023-04-13 16:47:24,179: None
[DEBUG]2023-04-13 16:47:24,179: None
[DEBUG]2023-04-13 16:47:24,180: None
[DEBUG]2023-04-13 16:47:24,180: None
[DEBUG]2023-04-13 16:47:24,180: None
[DEBUG]2023-04-13 16:47:24,180: None
[DEBUG]2023-04-13 16:47:24,181: None
[DEBUG]2023-04-13 16:47:24,181: None
[DEBUG]2023-04-13 16:47:24,181: None
[DEBUG]2023-04-13 16:47:24,181: None
[DEBUG]2023-04-13 16:47:24,181: None
[DEBUG]2023-04-13 16:47:24,182: None
[DEBUG]2023-04-13 16:47:24,182: None
[DEBUG]2023-04-13 16:47:24,182: None
[DEBUG]2023-04-13 16:47:24,182: None
[DEBUG]2023-04-13 16:47:24,182: None
[DEBUG]2023-04-13 16:47:24,182: None
[DEBUG]2023-04-13 16:47:24,183: None
[DEBUG]2023-04-13 16:47:24,183: None
[DEBUG]2023-04-13 16:47:24,183: None
[DEBUG]2023-04-13 16:47:24,183: None
[DEBUG]2023-04-13 16:47:24,183: None
[DEBUG]2023-04-13 16:47:24,183: None
[DEBUG]2023-04-13 16:47:24,183: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,184: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,185: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,186: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,187: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,189: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,190: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,191: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,193: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,195: None
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,197: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,198: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,199: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,200: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:47:24,201: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,721: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:48:22,721: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:48:22,721: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:48:22,723: None
[DEBUG]2023-04-13 16:48:22,723: None
[DEBUG]2023-04-13 16:48:22,724: None
[DEBUG]2023-04-13 16:48:22,724: None
[DEBUG]2023-04-13 16:48:22,724: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,725: None
[DEBUG]2023-04-13 16:48:22,726: None
[DEBUG]2023-04-13 16:48:22,726: None
[DEBUG]2023-04-13 16:48:22,726: None
[DEBUG]2023-04-13 16:48:22,726: None
[DEBUG]2023-04-13 16:48:22,726: None
[DEBUG]2023-04-13 16:48:22,726: None
[DEBUG]2023-04-13 16:48:22,727: None
[DEBUG]2023-04-13 16:48:22,727: None
[DEBUG]2023-04-13 16:48:22,727: None
[DEBUG]2023-04-13 16:48:22,727: None
[DEBUG]2023-04-13 16:48:22,727: None
[DEBUG]2023-04-13 16:48:22,727: None
[DEBUG]2023-04-13 16:48:22,727: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,728: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,729: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,730: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,731: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,732: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,733: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,734: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,736: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,737: None
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,738: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,739: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,740: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,741: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:48:22,742: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,160: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:49:17,160: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:49:17,160: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:49:17,162: None
[DEBUG]2023-04-13 16:49:17,162: None
[DEBUG]2023-04-13 16:49:17,163: None
[DEBUG]2023-04-13 16:49:17,163: None
[DEBUG]2023-04-13 16:49:17,163: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,164: None
[DEBUG]2023-04-13 16:49:17,165: None
[DEBUG]2023-04-13 16:49:17,165: None
[DEBUG]2023-04-13 16:49:17,165: None
[DEBUG]2023-04-13 16:49:17,165: None
[DEBUG]2023-04-13 16:49:17,165: None
[DEBUG]2023-04-13 16:49:17,165: None
[DEBUG]2023-04-13 16:49:17,166: None
[DEBUG]2023-04-13 16:49:17,166: None
[DEBUG]2023-04-13 16:49:17,166: None
[DEBUG]2023-04-13 16:49:17,166: None
[DEBUG]2023-04-13 16:49:17,166: None
[DEBUG]2023-04-13 16:49:17,166: None
[DEBUG]2023-04-13 16:49:17,166: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,167: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,168: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,169: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,170: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,171: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,172: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,173: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,174: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,175: None
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,176: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,177: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,178: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,179: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 16:49:17,180: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,860: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:02:25,860: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:02:25,860: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:02:25,862: None
[DEBUG]2023-04-13 17:02:25,862: None
[DEBUG]2023-04-13 17:02:25,863: None
[DEBUG]2023-04-13 17:02:25,863: None
[DEBUG]2023-04-13 17:02:25,863: None
[DEBUG]2023-04-13 17:02:25,864: None
[DEBUG]2023-04-13 17:02:25,864: None
[DEBUG]2023-04-13 17:02:25,864: None
[DEBUG]2023-04-13 17:02:25,864: None
[DEBUG]2023-04-13 17:02:25,866: None
[DEBUG]2023-04-13 17:02:25,866: None
[DEBUG]2023-04-13 17:02:25,866: None
[DEBUG]2023-04-13 17:02:25,866: None
[DEBUG]2023-04-13 17:02:25,866: None
[DEBUG]2023-04-13 17:02:25,868: None
[DEBUG]2023-04-13 17:02:25,868: None
[DEBUG]2023-04-13 17:02:25,868: None
[DEBUG]2023-04-13 17:02:25,868: None
[DEBUG]2023-04-13 17:02:25,868: None
[DEBUG]2023-04-13 17:02:25,868: None
[DEBUG]2023-04-13 17:02:25,870: None
[DEBUG]2023-04-13 17:02:25,870: None
[DEBUG]2023-04-13 17:02:25,870: None
[DEBUG]2023-04-13 17:02:25,870: None
[DEBUG]2023-04-13 17:02:25,870: None
[DEBUG]2023-04-13 17:02:25,870: None
[DEBUG]2023-04-13 17:02:25,870: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,871: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,872: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,873: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,875: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,877: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,879: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,881: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,883: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,885: None
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,887: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,889: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,890: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,893: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,894: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:02:25,895: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:34,967: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:05:34,967: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:05:34,967: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:05:34,969: None
[DEBUG]2023-04-13 17:05:34,969: None
[DEBUG]2023-04-13 17:05:34,971: None
[DEBUG]2023-04-13 17:05:34,971: None
[DEBUG]2023-04-13 17:05:34,971: None
[DEBUG]2023-04-13 17:05:34,972: None
[DEBUG]2023-04-13 17:05:34,972: None
[DEBUG]2023-04-13 17:05:34,972: None
[DEBUG]2023-04-13 17:05:34,972: None
[DEBUG]2023-04-13 17:05:34,973: None
[DEBUG]2023-04-13 17:05:34,973: None
[DEBUG]2023-04-13 17:05:34,973: None
[DEBUG]2023-04-13 17:05:34,973: None
[DEBUG]2023-04-13 17:05:34,973: None
[DEBUG]2023-04-13 17:05:34,974: None
[DEBUG]2023-04-13 17:05:34,974: None
[DEBUG]2023-04-13 17:05:34,974: None
[DEBUG]2023-04-13 17:05:34,974: None
[DEBUG]2023-04-13 17:05:34,974: None
[DEBUG]2023-04-13 17:05:34,974: None
[DEBUG]2023-04-13 17:05:34,976: None
[DEBUG]2023-04-13 17:05:34,976: None
[DEBUG]2023-04-13 17:05:34,976: None
[DEBUG]2023-04-13 17:05:34,976: None
[DEBUG]2023-04-13 17:05:34,976: None
[DEBUG]2023-04-13 17:05:34,976: None
[DEBUG]2023-04-13 17:05:34,976: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,977: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,979: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,980: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,982: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,984: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,986: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,988: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,989: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,991: None
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,993: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,995: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,996: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:34,998: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,000: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:05:35,001: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,568: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:07:12,568: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:07:12,569: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:07:12,570: None
[DEBUG]2023-04-13 17:07:12,570: None
[DEBUG]2023-04-13 17:07:12,571: None
[DEBUG]2023-04-13 17:07:12,571: None
[DEBUG]2023-04-13 17:07:12,571: None
[DEBUG]2023-04-13 17:07:12,572: None
[DEBUG]2023-04-13 17:07:12,572: None
[DEBUG]2023-04-13 17:07:12,572: None
[DEBUG]2023-04-13 17:07:12,572: None
[DEBUG]2023-04-13 17:07:12,573: None
[DEBUG]2023-04-13 17:07:12,573: None
[DEBUG]2023-04-13 17:07:12,573: None
[DEBUG]2023-04-13 17:07:12,573: None
[DEBUG]2023-04-13 17:07:12,573: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,574: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,575: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,576: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,577: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,578: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,579: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,580: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,581: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,582: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,583: None
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,584: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,585: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,586: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:07:12,587: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 17:10:08,320: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:10:08,320: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:10:08,320: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:10:08,322: None
[DEBUG]2023-04-13 17:10:08,322: None
[DEBUG]2023-04-13 17:10:08,323: None
[DEBUG]2023-04-13 17:10:08,323: None
[DEBUG]2023-04-13 17:10:08,323: None
[DEBUG]2023-04-13 17:10:08,323: None
[DEBUG]2023-04-13 17:10:08,323: None
[DEBUG]2023-04-13 17:10:08,323: None
[DEBUG]2023-04-13 17:10:08,323: None
[DEBUG]2023-04-13 17:10:08,324: None
[DEBUG]2023-04-13 17:10:08,324: None
[DEBUG]2023-04-13 17:10:08,324: None
[DEBUG]2023-04-13 17:10:08,324: None
[DEBUG]2023-04-13 17:10:08,324: None
[DEBUG]2023-04-13 17:10:08,325: None
[DEBUG]2023-04-13 17:10:08,325: None
[DEBUG]2023-04-13 17:10:08,325: None
[DEBUG]2023-04-13 17:10:08,325: None
[DEBUG]2023-04-13 17:10:08,325: None
[DEBUG]2023-04-13 17:10:08,325: None
[DEBUG]2023-04-13 17:10:08,326: None
[DEBUG]2023-04-13 17:10:08,326: None
[DEBUG]2023-04-13 17:10:08,326: None
[DEBUG]2023-04-13 17:10:08,326: None
[DEBUG]2023-04-13 17:10:08,326: None
[DEBUG]2023-04-13 17:10:08,326: None
[DEBUG]2023-04-13 17:10:08,326: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,327: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,328: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,329: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,330: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,331: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,332: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,333: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,334: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,335: None
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,337: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,338: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,339: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,341: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,343: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:10:08,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,233: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:11:30,233: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:11:30,234: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:11:30,235: None
[DEBUG]2023-04-13 17:11:30,235: None
[DEBUG]2023-04-13 17:11:30,236: None
[DEBUG]2023-04-13 17:11:30,236: None
[DEBUG]2023-04-13 17:11:30,236: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,237: None
[DEBUG]2023-04-13 17:11:30,238: None
[DEBUG]2023-04-13 17:11:30,238: None
[DEBUG]2023-04-13 17:11:30,238: None
[DEBUG]2023-04-13 17:11:30,238: None
[DEBUG]2023-04-13 17:11:30,238: None
[DEBUG]2023-04-13 17:11:30,238: None
[DEBUG]2023-04-13 17:11:30,239: None
[DEBUG]2023-04-13 17:11:30,239: None
[DEBUG]2023-04-13 17:11:30,239: None
[DEBUG]2023-04-13 17:11:30,239: None
[DEBUG]2023-04-13 17:11:30,239: None
[DEBUG]2023-04-13 17:11:30,239: None
[DEBUG]2023-04-13 17:11:30,239: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,240: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,242: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,243: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,244: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,245: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,246: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,247: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,248: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,249: None
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,250: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,251: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,252: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,253: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,254: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:11:30,255: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,880: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:23:11,880: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:23:11,880: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:23:11,882: None
[DEBUG]2023-04-13 17:23:11,882: None
[DEBUG]2023-04-13 17:23:11,883: None
[DEBUG]2023-04-13 17:23:11,883: None
[DEBUG]2023-04-13 17:23:11,883: None
[DEBUG]2023-04-13 17:23:11,883: None
[DEBUG]2023-04-13 17:23:11,883: None
[DEBUG]2023-04-13 17:23:11,883: None
[DEBUG]2023-04-13 17:23:11,883: None
[DEBUG]2023-04-13 17:23:11,884: None
[DEBUG]2023-04-13 17:23:11,884: None
[DEBUG]2023-04-13 17:23:11,884: None
[DEBUG]2023-04-13 17:23:11,884: None
[DEBUG]2023-04-13 17:23:11,884: None
[DEBUG]2023-04-13 17:23:11,885: None
[DEBUG]2023-04-13 17:23:11,885: None
[DEBUG]2023-04-13 17:23:11,885: None
[DEBUG]2023-04-13 17:23:11,885: None
[DEBUG]2023-04-13 17:23:11,885: None
[DEBUG]2023-04-13 17:23:11,885: None
[DEBUG]2023-04-13 17:23:11,886: None
[DEBUG]2023-04-13 17:23:11,886: None
[DEBUG]2023-04-13 17:23:11,886: None
[DEBUG]2023-04-13 17:23:11,886: None
[DEBUG]2023-04-13 17:23:11,886: None
[DEBUG]2023-04-13 17:23:11,886: None
[DEBUG]2023-04-13 17:23:11,886: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,887: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,888: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,890: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,891: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,892: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,893: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,894: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,895: None
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,896: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,897: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,898: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,899: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:23:11,900: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,127: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:52:21,127: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:52:21,127: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:52:21,129: None
[DEBUG]2023-04-13 17:52:21,129: None
[DEBUG]2023-04-13 17:52:21,130: None
[DEBUG]2023-04-13 17:52:21,130: None
[DEBUG]2023-04-13 17:52:21,130: None
[DEBUG]2023-04-13 17:52:21,131: None
[DEBUG]2023-04-13 17:52:21,131: None
[DEBUG]2023-04-13 17:52:21,131: None
[DEBUG]2023-04-13 17:52:21,131: None
[DEBUG]2023-04-13 17:52:21,132: None
[DEBUG]2023-04-13 17:52:21,132: None
[DEBUG]2023-04-13 17:52:21,132: None
[DEBUG]2023-04-13 17:52:21,132: None
[DEBUG]2023-04-13 17:52:21,132: None
[DEBUG]2023-04-13 17:52:21,133: None
[DEBUG]2023-04-13 17:52:21,133: None
[DEBUG]2023-04-13 17:52:21,133: None
[DEBUG]2023-04-13 17:52:21,133: None
[DEBUG]2023-04-13 17:52:21,133: None
[DEBUG]2023-04-13 17:52:21,133: None
[DEBUG]2023-04-13 17:52:21,135: None
[DEBUG]2023-04-13 17:52:21,135: None
[DEBUG]2023-04-13 17:52:21,135: None
[DEBUG]2023-04-13 17:52:21,135: None
[DEBUG]2023-04-13 17:52:21,135: None
[DEBUG]2023-04-13 17:52:21,135: None
[DEBUG]2023-04-13 17:52:21,135: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,136: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,137: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,138: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,140: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,141: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,142: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,143: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,144: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,145: None
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,146: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,147: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,149: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:52:21,150: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,559: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 17:58:51,559: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 17:58:51,559: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 17:58:51,567: None
[DEBUG]2023-04-13 17:58:51,567: None
[DEBUG]2023-04-13 17:58:51,574: None
[DEBUG]2023-04-13 17:58:51,574: None
[DEBUG]2023-04-13 17:58:51,574: None
[DEBUG]2023-04-13 17:58:51,580: None
[DEBUG]2023-04-13 17:58:51,580: None
[DEBUG]2023-04-13 17:58:51,580: None
[DEBUG]2023-04-13 17:58:51,580: None
[DEBUG]2023-04-13 17:58:51,587: None
[DEBUG]2023-04-13 17:58:51,587: None
[DEBUG]2023-04-13 17:58:51,587: None
[DEBUG]2023-04-13 17:58:51,587: None
[DEBUG]2023-04-13 17:58:51,587: None
[DEBUG]2023-04-13 17:58:51,594: None
[DEBUG]2023-04-13 17:58:51,594: None
[DEBUG]2023-04-13 17:58:51,594: None
[DEBUG]2023-04-13 17:58:51,594: None
[DEBUG]2023-04-13 17:58:51,594: None
[DEBUG]2023-04-13 17:58:51,594: None
[DEBUG]2023-04-13 17:58:51,602: None
[DEBUG]2023-04-13 17:58:51,602: None
[DEBUG]2023-04-13 17:58:51,602: None
[DEBUG]2023-04-13 17:58:51,602: None
[DEBUG]2023-04-13 17:58:51,602: None
[DEBUG]2023-04-13 17:58:51,602: None
[DEBUG]2023-04-13 17:58:51,602: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,609: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,617: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,624: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,632: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,638: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,646: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,656: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,664: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,674: None
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,684: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,685: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,686: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,687: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,688: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 17:58:51,689: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,923: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:00:47,923: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:00:47,923: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:00:47,925: None
[DEBUG]2023-04-13 18:00:47,925: None
[DEBUG]2023-04-13 18:00:47,926: None
[DEBUG]2023-04-13 18:00:47,926: None
[DEBUG]2023-04-13 18:00:47,926: None
[DEBUG]2023-04-13 18:00:47,927: None
[DEBUG]2023-04-13 18:00:47,927: None
[DEBUG]2023-04-13 18:00:47,927: None
[DEBUG]2023-04-13 18:00:47,927: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,928: None
[DEBUG]2023-04-13 18:00:47,929: None
[DEBUG]2023-04-13 18:00:47,929: None
[DEBUG]2023-04-13 18:00:47,929: None
[DEBUG]2023-04-13 18:00:47,929: None
[DEBUG]2023-04-13 18:00:47,929: None
[DEBUG]2023-04-13 18:00:47,929: None
[DEBUG]2023-04-13 18:00:47,929: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,930: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,931: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,932: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,933: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,934: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,935: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,936: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,937: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,938: None
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,939: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,940: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,941: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,942: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:00:47,943: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,190: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:02:07,190: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:02:07,191: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:02:07,192: None
[DEBUG]2023-04-13 18:02:07,192: None
[DEBUG]2023-04-13 18:02:07,193: None
[DEBUG]2023-04-13 18:02:07,193: None
[DEBUG]2023-04-13 18:02:07,193: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,194: None
[DEBUG]2023-04-13 18:02:07,195: None
[DEBUG]2023-04-13 18:02:07,195: None
[DEBUG]2023-04-13 18:02:07,195: None
[DEBUG]2023-04-13 18:02:07,195: None
[DEBUG]2023-04-13 18:02:07,195: None
[DEBUG]2023-04-13 18:02:07,195: None
[DEBUG]2023-04-13 18:02:07,196: None
[DEBUG]2023-04-13 18:02:07,196: None
[DEBUG]2023-04-13 18:02:07,196: None
[DEBUG]2023-04-13 18:02:07,196: None
[DEBUG]2023-04-13 18:02:07,196: None
[DEBUG]2023-04-13 18:02:07,196: None
[DEBUG]2023-04-13 18:02:07,196: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,197: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,198: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,199: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,200: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,201: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,202: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,203: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,204: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,205: None
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,206: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,207: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,208: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,209: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:02:07,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,138: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:10:06,138: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:10:06,138: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:10:06,140: None
[DEBUG]2023-04-13 18:10:06,140: None
[DEBUG]2023-04-13 18:10:06,141: None
[DEBUG]2023-04-13 18:10:06,141: None
[DEBUG]2023-04-13 18:10:06,141: None
[DEBUG]2023-04-13 18:10:06,141: None
[DEBUG]2023-04-13 18:10:06,141: None
[DEBUG]2023-04-13 18:10:06,141: None
[DEBUG]2023-04-13 18:10:06,141: None
[DEBUG]2023-04-13 18:10:06,142: None
[DEBUG]2023-04-13 18:10:06,142: None
[DEBUG]2023-04-13 18:10:06,142: None
[DEBUG]2023-04-13 18:10:06,142: None
[DEBUG]2023-04-13 18:10:06,142: None
[DEBUG]2023-04-13 18:10:06,143: None
[DEBUG]2023-04-13 18:10:06,143: None
[DEBUG]2023-04-13 18:10:06,143: None
[DEBUG]2023-04-13 18:10:06,143: None
[DEBUG]2023-04-13 18:10:06,143: None
[DEBUG]2023-04-13 18:10:06,143: None
[DEBUG]2023-04-13 18:10:06,144: None
[DEBUG]2023-04-13 18:10:06,144: None
[DEBUG]2023-04-13 18:10:06,144: None
[DEBUG]2023-04-13 18:10:06,144: None
[DEBUG]2023-04-13 18:10:06,144: None
[DEBUG]2023-04-13 18:10:06,144: None
[DEBUG]2023-04-13 18:10:06,144: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,145: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,146: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,147: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,148: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,149: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,150: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,152: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,153: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,154: None
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,155: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,156: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,158: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:10:06,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,794: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:13:34,795: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:13:34,795: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:13:34,797: None
[DEBUG]2023-04-13 18:13:34,797: None
[DEBUG]2023-04-13 18:13:34,797: None
[DEBUG]2023-04-13 18:13:34,797: None
[DEBUG]2023-04-13 18:13:34,797: None
[DEBUG]2023-04-13 18:13:34,798: None
[DEBUG]2023-04-13 18:13:34,798: None
[DEBUG]2023-04-13 18:13:34,798: None
[DEBUG]2023-04-13 18:13:34,798: None
[DEBUG]2023-04-13 18:13:34,799: None
[DEBUG]2023-04-13 18:13:34,799: None
[DEBUG]2023-04-13 18:13:34,799: None
[DEBUG]2023-04-13 18:13:34,799: None
[DEBUG]2023-04-13 18:13:34,799: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,800: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,801: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,802: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,803: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,804: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,806: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,807: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,808: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,809: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,810: None
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,811: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,812: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,814: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:13:34,815: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 18:23:34,425: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:23:34,425: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:23:34,425: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:23:34,427: None
[DEBUG]2023-04-13 18:23:34,427: None
[DEBUG]2023-04-13 18:23:34,427: None
[DEBUG]2023-04-13 18:23:34,427: None
[DEBUG]2023-04-13 18:23:34,427: None
[DEBUG]2023-04-13 18:23:34,428: None
[DEBUG]2023-04-13 18:23:34,428: None
[DEBUG]2023-04-13 18:23:34,428: None
[DEBUG]2023-04-13 18:23:34,428: None
[DEBUG]2023-04-13 18:23:34,429: None
[DEBUG]2023-04-13 18:23:34,429: None
[DEBUG]2023-04-13 18:23:34,429: None
[DEBUG]2023-04-13 18:23:34,429: None
[DEBUG]2023-04-13 18:23:34,429: None
[DEBUG]2023-04-13 18:23:34,430: None
[DEBUG]2023-04-13 18:23:34,430: None
[DEBUG]2023-04-13 18:23:34,430: None
[DEBUG]2023-04-13 18:23:34,430: None
[DEBUG]2023-04-13 18:23:34,430: None
[DEBUG]2023-04-13 18:23:34,430: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,431: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,432: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,433: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,434: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,435: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,437: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,438: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,440: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,441: None
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,443: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,444: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,445: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,446: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:23:34,447: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,752: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:25:25,752: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:25:25,752: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:25:25,754: None
[DEBUG]2023-04-13 18:25:25,754: None
[DEBUG]2023-04-13 18:25:25,754: None
[DEBUG]2023-04-13 18:25:25,754: None
[DEBUG]2023-04-13 18:25:25,754: None
[DEBUG]2023-04-13 18:25:25,755: None
[DEBUG]2023-04-13 18:25:25,755: None
[DEBUG]2023-04-13 18:25:25,755: None
[DEBUG]2023-04-13 18:25:25,755: None
[DEBUG]2023-04-13 18:25:25,756: None
[DEBUG]2023-04-13 18:25:25,756: None
[DEBUG]2023-04-13 18:25:25,756: None
[DEBUG]2023-04-13 18:25:25,756: None
[DEBUG]2023-04-13 18:25:25,756: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,757: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,758: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,759: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,760: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,761: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,762: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,763: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,764: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,765: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,766: None
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,767: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,768: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,769: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,770: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:25:25,771: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,435: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:29:13,436: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:29:13,436: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:29:13,437: None
[DEBUG]2023-04-13 18:29:13,437: None
[DEBUG]2023-04-13 18:29:13,438: None
[DEBUG]2023-04-13 18:29:13,438: None
[DEBUG]2023-04-13 18:29:13,438: None
[DEBUG]2023-04-13 18:29:13,439: None
[DEBUG]2023-04-13 18:29:13,439: None
[DEBUG]2023-04-13 18:29:13,439: None
[DEBUG]2023-04-13 18:29:13,439: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,440: None
[DEBUG]2023-04-13 18:29:13,441: None
[DEBUG]2023-04-13 18:29:13,441: None
[DEBUG]2023-04-13 18:29:13,441: None
[DEBUG]2023-04-13 18:29:13,441: None
[DEBUG]2023-04-13 18:29:13,441: None
[DEBUG]2023-04-13 18:29:13,441: None
[DEBUG]2023-04-13 18:29:13,441: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,442: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,443: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,444: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,445: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,446: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,447: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,449: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,450: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,451: None
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,452: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,453: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,454: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,455: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:29:13,456: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,176: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:30:47,176: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:30:47,176: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:30:47,178: None
[DEBUG]2023-04-13 18:30:47,178: None
[DEBUG]2023-04-13 18:30:47,179: None
[DEBUG]2023-04-13 18:30:47,179: None
[DEBUG]2023-04-13 18:30:47,179: None
[DEBUG]2023-04-13 18:30:47,179: None
[DEBUG]2023-04-13 18:30:47,179: None
[DEBUG]2023-04-13 18:30:47,179: None
[DEBUG]2023-04-13 18:30:47,179: None
[DEBUG]2023-04-13 18:30:47,180: None
[DEBUG]2023-04-13 18:30:47,180: None
[DEBUG]2023-04-13 18:30:47,180: None
[DEBUG]2023-04-13 18:30:47,180: None
[DEBUG]2023-04-13 18:30:47,180: None
[DEBUG]2023-04-13 18:30:47,181: None
[DEBUG]2023-04-13 18:30:47,181: None
[DEBUG]2023-04-13 18:30:47,181: None
[DEBUG]2023-04-13 18:30:47,181: None
[DEBUG]2023-04-13 18:30:47,181: None
[DEBUG]2023-04-13 18:30:47,181: None
[DEBUG]2023-04-13 18:30:47,182: None
[DEBUG]2023-04-13 18:30:47,182: None
[DEBUG]2023-04-13 18:30:47,182: None
[DEBUG]2023-04-13 18:30:47,182: None
[DEBUG]2023-04-13 18:30:47,182: None
[DEBUG]2023-04-13 18:30:47,182: None
[DEBUG]2023-04-13 18:30:47,182: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,183: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,184: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,185: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,186: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,187: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,188: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,189: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,190: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,191: None
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,192: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,193: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,195: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:30:47,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,318: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 18:40:56,318: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 18:40:56,318: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 18:40:56,320: None
[DEBUG]2023-04-13 18:40:56,320: None
[DEBUG]2023-04-13 18:40:56,321: None
[DEBUG]2023-04-13 18:40:56,321: None
[DEBUG]2023-04-13 18:40:56,321: None
[DEBUG]2023-04-13 18:40:56,321: None
[DEBUG]2023-04-13 18:40:56,321: None
[DEBUG]2023-04-13 18:40:56,321: None
[DEBUG]2023-04-13 18:40:56,321: None
[DEBUG]2023-04-13 18:40:56,322: None
[DEBUG]2023-04-13 18:40:56,322: None
[DEBUG]2023-04-13 18:40:56,322: None
[DEBUG]2023-04-13 18:40:56,322: None
[DEBUG]2023-04-13 18:40:56,322: None
[DEBUG]2023-04-13 18:40:56,323: None
[DEBUG]2023-04-13 18:40:56,323: None
[DEBUG]2023-04-13 18:40:56,323: None
[DEBUG]2023-04-13 18:40:56,323: None
[DEBUG]2023-04-13 18:40:56,323: None
[DEBUG]2023-04-13 18:40:56,323: None
[DEBUG]2023-04-13 18:40:56,324: None
[DEBUG]2023-04-13 18:40:56,324: None
[DEBUG]2023-04-13 18:40:56,324: None
[DEBUG]2023-04-13 18:40:56,324: None
[DEBUG]2023-04-13 18:40:56,324: None
[DEBUG]2023-04-13 18:40:56,324: None
[DEBUG]2023-04-13 18:40:56,324: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,325: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,326: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,327: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,329: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,330: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,331: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,332: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,333: None
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,334: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,335: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: <re.Match object; span=(1587, 1723), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,337: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState', 'SubFourthState']
[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


[DEBUG]2023-04-13 18:40:56,338: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
	"SubFourthState",
};


