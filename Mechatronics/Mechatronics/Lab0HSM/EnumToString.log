[DEBUG]2023-04-13 01:49:24,910: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 01:49:24,910: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 01:49:24,910: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 01:49:24,912: None
[DEBUG]2023-04-13 01:49:24,912: None
[DEBUG]2023-04-13 01:49:24,913: None
[DEBUG]2023-04-13 01:49:24,913: None
[DEBUG]2023-04-13 01:49:24,913: None
[DEBUG]2023-04-13 01:49:24,913: None
[DEBUG]2023-04-13 01:49:24,913: None
[DEBUG]2023-04-13 01:49:24,913: None
[DEBUG]2023-04-13 01:49:24,913: None
[DEBUG]2023-04-13 01:49:24,914: None
[DEBUG]2023-04-13 01:49:24,914: None
[DEBUG]2023-04-13 01:49:24,914: None
[DEBUG]2023-04-13 01:49:24,914: None
[DEBUG]2023-04-13 01:49:24,914: None
[DEBUG]2023-04-13 01:49:24,915: None
[DEBUG]2023-04-13 01:49:24,915: None
[DEBUG]2023-04-13 01:49:24,915: None
[DEBUG]2023-04-13 01:49:24,915: None
[DEBUG]2023-04-13 01:49:24,915: None
[DEBUG]2023-04-13 01:49:24,915: None
[DEBUG]2023-04-13 01:49:24,916: None
[DEBUG]2023-04-13 01:49:24,916: None
[DEBUG]2023-04-13 01:49:24,916: None
[DEBUG]2023-04-13 01:49:24,916: None
[DEBUG]2023-04-13 01:49:24,916: None
[DEBUG]2023-04-13 01:49:24,916: None
[DEBUG]2023-04-13 01:49:24,916: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,917: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,918: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,919: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,920: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,921: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,922: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,924: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,925: None
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,926: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,927: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,929: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 01:49:24,930: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,755: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:22:07,755: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:22:07,755: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:22:07,768: None
[DEBUG]2023-04-13 12:22:07,768: None
[DEBUG]2023-04-13 12:22:07,778: None
[DEBUG]2023-04-13 12:22:07,778: None
[DEBUG]2023-04-13 12:22:07,778: None
[DEBUG]2023-04-13 12:22:07,780: None
[DEBUG]2023-04-13 12:22:07,780: None
[DEBUG]2023-04-13 12:22:07,780: None
[DEBUG]2023-04-13 12:22:07,780: None
[DEBUG]2023-04-13 12:22:07,789: None
[DEBUG]2023-04-13 12:22:07,789: None
[DEBUG]2023-04-13 12:22:07,789: None
[DEBUG]2023-04-13 12:22:07,789: None
[DEBUG]2023-04-13 12:22:07,789: None
[DEBUG]2023-04-13 12:22:07,798: None
[DEBUG]2023-04-13 12:22:07,798: None
[DEBUG]2023-04-13 12:22:07,798: None
[DEBUG]2023-04-13 12:22:07,798: None
[DEBUG]2023-04-13 12:22:07,798: None
[DEBUG]2023-04-13 12:22:07,798: None
[DEBUG]2023-04-13 12:22:07,810: None
[DEBUG]2023-04-13 12:22:07,810: None
[DEBUG]2023-04-13 12:22:07,810: None
[DEBUG]2023-04-13 12:22:07,810: None
[DEBUG]2023-04-13 12:22:07,810: None
[DEBUG]2023-04-13 12:22:07,810: None
[DEBUG]2023-04-13 12:22:07,810: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,820: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,833: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,844: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,856: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,867: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,878: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,888: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,890: None
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,900: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,901: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,902: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,904: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,905: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,906: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:07,908: None
[DEBUG]2023-04-13 12:22:51,488: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:22:51,488: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:22:51,489: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:22:51,490: None
[DEBUG]2023-04-13 12:22:51,490: None
[DEBUG]2023-04-13 12:22:51,491: None
[DEBUG]2023-04-13 12:22:51,491: None
[DEBUG]2023-04-13 12:22:51,491: None
[DEBUG]2023-04-13 12:22:51,492: None
[DEBUG]2023-04-13 12:22:51,492: None
[DEBUG]2023-04-13 12:22:51,492: None
[DEBUG]2023-04-13 12:22:51,492: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,493: None
[DEBUG]2023-04-13 12:22:51,494: None
[DEBUG]2023-04-13 12:22:51,494: None
[DEBUG]2023-04-13 12:22:51,494: None
[DEBUG]2023-04-13 12:22:51,494: None
[DEBUG]2023-04-13 12:22:51,494: None
[DEBUG]2023-04-13 12:22:51,494: None
[DEBUG]2023-04-13 12:22:51,494: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,495: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,497: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,498: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,499: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,500: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,501: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,503: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,505: None
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,506: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,507: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,509: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,510: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:22:51,511: None
[DEBUG]2023-04-13 12:23:47,144: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:23:47,144: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:23:47,144: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:23:47,146: None
[DEBUG]2023-04-13 12:23:47,146: None
[DEBUG]2023-04-13 12:23:47,147: None
[DEBUG]2023-04-13 12:23:47,147: None
[DEBUG]2023-04-13 12:23:47,147: None
[DEBUG]2023-04-13 12:23:47,147: None
[DEBUG]2023-04-13 12:23:47,147: None
[DEBUG]2023-04-13 12:23:47,147: None
[DEBUG]2023-04-13 12:23:47,147: None
[DEBUG]2023-04-13 12:23:47,148: None
[DEBUG]2023-04-13 12:23:47,148: None
[DEBUG]2023-04-13 12:23:47,148: None
[DEBUG]2023-04-13 12:23:47,148: None
[DEBUG]2023-04-13 12:23:47,148: None
[DEBUG]2023-04-13 12:23:47,149: None
[DEBUG]2023-04-13 12:23:47,149: None
[DEBUG]2023-04-13 12:23:47,149: None
[DEBUG]2023-04-13 12:23:47,149: None
[DEBUG]2023-04-13 12:23:47,149: None
[DEBUG]2023-04-13 12:23:47,149: None
[DEBUG]2023-04-13 12:23:47,150: None
[DEBUG]2023-04-13 12:23:47,150: None
[DEBUG]2023-04-13 12:23:47,150: None
[DEBUG]2023-04-13 12:23:47,150: None
[DEBUG]2023-04-13 12:23:47,150: None
[DEBUG]2023-04-13 12:23:47,150: None
[DEBUG]2023-04-13 12:23:47,150: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,151: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,152: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,153: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,154: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,155: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,156: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,157: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,158: None
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,159: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,160: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,161: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,162: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,163: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:23:47,164: None
[DEBUG]2023-04-13 12:24:01,644: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:24:01,644: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:24:01,644: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:24:01,647: None
[DEBUG]2023-04-13 12:24:01,647: None
[DEBUG]2023-04-13 12:24:01,648: None
[DEBUG]2023-04-13 12:24:01,648: None
[DEBUG]2023-04-13 12:24:01,648: None
[DEBUG]2023-04-13 12:24:01,649: None
[DEBUG]2023-04-13 12:24:01,649: None
[DEBUG]2023-04-13 12:24:01,649: None
[DEBUG]2023-04-13 12:24:01,649: None
[DEBUG]2023-04-13 12:24:01,650: None
[DEBUG]2023-04-13 12:24:01,650: None
[DEBUG]2023-04-13 12:24:01,650: None
[DEBUG]2023-04-13 12:24:01,650: None
[DEBUG]2023-04-13 12:24:01,650: None
[DEBUG]2023-04-13 12:24:01,651: None
[DEBUG]2023-04-13 12:24:01,651: None
[DEBUG]2023-04-13 12:24:01,651: None
[DEBUG]2023-04-13 12:24:01,651: None
[DEBUG]2023-04-13 12:24:01,651: None
[DEBUG]2023-04-13 12:24:01,651: None
[DEBUG]2023-04-13 12:24:01,652: None
[DEBUG]2023-04-13 12:24:01,652: None
[DEBUG]2023-04-13 12:24:01,652: None
[DEBUG]2023-04-13 12:24:01,652: None
[DEBUG]2023-04-13 12:24:01,652: None
[DEBUG]2023-04-13 12:24:01,652: None
[DEBUG]2023-04-13 12:24:01,652: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,653: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,654: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,655: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,656: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,657: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,658: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,659: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,660: None
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,662: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,663: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,667: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,668: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,669: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:01,671: None
[DEBUG]2023-04-13 12:24:26,401: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:24:26,402: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:24:26,402: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:24:26,404: None
[DEBUG]2023-04-13 12:24:26,404: None
[DEBUG]2023-04-13 12:24:26,404: None
[DEBUG]2023-04-13 12:24:26,404: None
[DEBUG]2023-04-13 12:24:26,404: None
[DEBUG]2023-04-13 12:24:26,405: None
[DEBUG]2023-04-13 12:24:26,405: None
[DEBUG]2023-04-13 12:24:26,405: None
[DEBUG]2023-04-13 12:24:26,405: None
[DEBUG]2023-04-13 12:24:26,406: None
[DEBUG]2023-04-13 12:24:26,406: None
[DEBUG]2023-04-13 12:24:26,406: None
[DEBUG]2023-04-13 12:24:26,406: None
[DEBUG]2023-04-13 12:24:26,406: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,407: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,408: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,409: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,410: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,411: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,413: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,414: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,415: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,416: None
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,417: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,418: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,419: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,420: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:24:26,422: None
[DEBUG]2023-04-13 12:50:40,641: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:50:40,641: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:50:40,641: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:50:40,644: None
[DEBUG]2023-04-13 12:50:40,644: None
[DEBUG]2023-04-13 12:50:40,645: None
[DEBUG]2023-04-13 12:50:40,645: None
[DEBUG]2023-04-13 12:50:40,645: None
[DEBUG]2023-04-13 12:50:40,645: None
[DEBUG]2023-04-13 12:50:40,645: None
[DEBUG]2023-04-13 12:50:40,645: None
[DEBUG]2023-04-13 12:50:40,645: None
[DEBUG]2023-04-13 12:50:40,646: None
[DEBUG]2023-04-13 12:50:40,646: None
[DEBUG]2023-04-13 12:50:40,646: None
[DEBUG]2023-04-13 12:50:40,646: None
[DEBUG]2023-04-13 12:50:40,646: None
[DEBUG]2023-04-13 12:50:40,647: None
[DEBUG]2023-04-13 12:50:40,647: None
[DEBUG]2023-04-13 12:50:40,647: None
[DEBUG]2023-04-13 12:50:40,647: None
[DEBUG]2023-04-13 12:50:40,647: None
[DEBUG]2023-04-13 12:50:40,647: None
[DEBUG]2023-04-13 12:50:40,648: None
[DEBUG]2023-04-13 12:50:40,648: None
[DEBUG]2023-04-13 12:50:40,648: None
[DEBUG]2023-04-13 12:50:40,648: None
[DEBUG]2023-04-13 12:50:40,648: None
[DEBUG]2023-04-13 12:50:40,648: None
[DEBUG]2023-04-13 12:50:40,648: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,649: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,650: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,651: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,652: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,653: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,655: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,656: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,657: None
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,658: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,659: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,661: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,662: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:50:40,663: None
[DEBUG]2023-04-13 12:57:45,279: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:57:45,279: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:57:45,279: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:57:45,281: None
[DEBUG]2023-04-13 12:57:45,281: None
[DEBUG]2023-04-13 12:57:45,282: None
[DEBUG]2023-04-13 12:57:45,282: None
[DEBUG]2023-04-13 12:57:45,282: None
[DEBUG]2023-04-13 12:57:45,282: None
[DEBUG]2023-04-13 12:57:45,282: None
[DEBUG]2023-04-13 12:57:45,282: None
[DEBUG]2023-04-13 12:57:45,282: None
[DEBUG]2023-04-13 12:57:45,283: None
[DEBUG]2023-04-13 12:57:45,283: None
[DEBUG]2023-04-13 12:57:45,283: None
[DEBUG]2023-04-13 12:57:45,283: None
[DEBUG]2023-04-13 12:57:45,283: None
[DEBUG]2023-04-13 12:57:45,284: None
[DEBUG]2023-04-13 12:57:45,284: None
[DEBUG]2023-04-13 12:57:45,284: None
[DEBUG]2023-04-13 12:57:45,284: None
[DEBUG]2023-04-13 12:57:45,284: None
[DEBUG]2023-04-13 12:57:45,284: None
[DEBUG]2023-04-13 12:57:45,285: None
[DEBUG]2023-04-13 12:57:45,285: None
[DEBUG]2023-04-13 12:57:45,285: None
[DEBUG]2023-04-13 12:57:45,285: None
[DEBUG]2023-04-13 12:57:45,285: None
[DEBUG]2023-04-13 12:57:45,285: None
[DEBUG]2023-04-13 12:57:45,285: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,286: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,287: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,288: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,289: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,290: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,291: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,292: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,293: None
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,294: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,297: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:45,299: None
[DEBUG]2023-04-13 12:57:58,688: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 12:57:58,688: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 12:57:58,688: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 12:57:58,690: None
[DEBUG]2023-04-13 12:57:58,690: None
[DEBUG]2023-04-13 12:57:58,691: None
[DEBUG]2023-04-13 12:57:58,691: None
[DEBUG]2023-04-13 12:57:58,691: None
[DEBUG]2023-04-13 12:57:58,691: None
[DEBUG]2023-04-13 12:57:58,691: None
[DEBUG]2023-04-13 12:57:58,691: None
[DEBUG]2023-04-13 12:57:58,691: None
[DEBUG]2023-04-13 12:57:58,692: None
[DEBUG]2023-04-13 12:57:58,692: None
[DEBUG]2023-04-13 12:57:58,692: None
[DEBUG]2023-04-13 12:57:58,692: None
[DEBUG]2023-04-13 12:57:58,692: None
[DEBUG]2023-04-13 12:57:58,693: None
[DEBUG]2023-04-13 12:57:58,693: None
[DEBUG]2023-04-13 12:57:58,693: None
[DEBUG]2023-04-13 12:57:58,693: None
[DEBUG]2023-04-13 12:57:58,693: None
[DEBUG]2023-04-13 12:57:58,693: None
[DEBUG]2023-04-13 12:57:58,694: None
[DEBUG]2023-04-13 12:57:58,694: None
[DEBUG]2023-04-13 12:57:58,694: None
[DEBUG]2023-04-13 12:57:58,694: None
[DEBUG]2023-04-13 12:57:58,694: None
[DEBUG]2023-04-13 12:57:58,694: None
[DEBUG]2023-04-13 12:57:58,694: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,695: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,696: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,697: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,698: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,699: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,700: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,701: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,702: None
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,703: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,704: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,705: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,706: ['InitPSubState', 'SubFirstState']
[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,707: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 12:57:58,708: None
[DEBUG]2023-04-13 15:10:12,451: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 15:10:12,452: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 15:10:12,452: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 15:10:12,454: None
[DEBUG]2023-04-13 15:10:12,454: None
[DEBUG]2023-04-13 15:10:12,455: None
[DEBUG]2023-04-13 15:10:12,455: None
[DEBUG]2023-04-13 15:10:12,455: None
[DEBUG]2023-04-13 15:10:12,456: None
[DEBUG]2023-04-13 15:10:12,456: None
[DEBUG]2023-04-13 15:10:12,456: None
[DEBUG]2023-04-13 15:10:12,456: None
[DEBUG]2023-04-13 15:10:12,457: None
[DEBUG]2023-04-13 15:10:12,457: None
[DEBUG]2023-04-13 15:10:12,457: None
[DEBUG]2023-04-13 15:10:12,457: None
[DEBUG]2023-04-13 15:10:12,457: None
[DEBUG]2023-04-13 15:10:12,458: None
[DEBUG]2023-04-13 15:10:12,458: None
[DEBUG]2023-04-13 15:10:12,458: None
[DEBUG]2023-04-13 15:10:12,458: None
[DEBUG]2023-04-13 15:10:12,458: None
[DEBUG]2023-04-13 15:10:12,458: None
[DEBUG]2023-04-13 15:10:12,459: None
[DEBUG]2023-04-13 15:10:12,459: None
[DEBUG]2023-04-13 15:10:12,459: None
[DEBUG]2023-04-13 15:10:12,459: None
[DEBUG]2023-04-13 15:10:12,459: None
[DEBUG]2023-04-13 15:10:12,459: None
[DEBUG]2023-04-13 15:10:12,459: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,460: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,461: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,462: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,464: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,465: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,466: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,468: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,469: None
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,470: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,471: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,472: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: <re.Match object; span=(1568, 1684), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,474: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,475: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:12,477: None
[DEBUG]2023-04-13 15:10:33,044: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 15:10:33,044: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 15:10:33,044: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 15:10:33,046: None
[DEBUG]2023-04-13 15:10:33,046: None
[DEBUG]2023-04-13 15:10:33,047: None
[DEBUG]2023-04-13 15:10:33,047: None
[DEBUG]2023-04-13 15:10:33,047: None
[DEBUG]2023-04-13 15:10:33,048: None
[DEBUG]2023-04-13 15:10:33,048: None
[DEBUG]2023-04-13 15:10:33,048: None
[DEBUG]2023-04-13 15:10:33,048: None
[DEBUG]2023-04-13 15:10:33,049: None
[DEBUG]2023-04-13 15:10:33,049: None
[DEBUG]2023-04-13 15:10:33,049: None
[DEBUG]2023-04-13 15:10:33,049: None
[DEBUG]2023-04-13 15:10:33,049: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,050: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,051: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,052: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,054: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,056: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,057: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,058: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,060: None
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,061: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,062: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,065: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,066: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:33,067: None
[DEBUG]2023-04-13 15:10:48,535: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 15:10:48,535: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 15:10:48,535: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 15:10:48,538: None
[DEBUG]2023-04-13 15:10:48,538: None
[DEBUG]2023-04-13 15:10:48,538: None
[DEBUG]2023-04-13 15:10:48,538: None
[DEBUG]2023-04-13 15:10:48,538: None
[DEBUG]2023-04-13 15:10:48,539: None
[DEBUG]2023-04-13 15:10:48,539: None
[DEBUG]2023-04-13 15:10:48,539: None
[DEBUG]2023-04-13 15:10:48,539: None
[DEBUG]2023-04-13 15:10:48,540: None
[DEBUG]2023-04-13 15:10:48,540: None
[DEBUG]2023-04-13 15:10:48,540: None
[DEBUG]2023-04-13 15:10:48,540: None
[DEBUG]2023-04-13 15:10:48,540: None
[DEBUG]2023-04-13 15:10:48,541: None
[DEBUG]2023-04-13 15:10:48,541: None
[DEBUG]2023-04-13 15:10:48,541: None
[DEBUG]2023-04-13 15:10:48,541: None
[DEBUG]2023-04-13 15:10:48,541: None
[DEBUG]2023-04-13 15:10:48,541: None
[DEBUG]2023-04-13 15:10:48,542: None
[DEBUG]2023-04-13 15:10:48,542: None
[DEBUG]2023-04-13 15:10:48,542: None
[DEBUG]2023-04-13 15:10:48,542: None
[DEBUG]2023-04-13 15:10:48,542: None
[DEBUG]2023-04-13 15:10:48,542: None
[DEBUG]2023-04-13 15:10:48,542: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,543: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,544: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,545: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,547: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,548: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,549: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,551: None
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,553: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,554: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,556: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,557: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 15:10:48,558: None
[DEBUG]2023-04-13 16:32:54,038: <re.Match object; span=(1085, 1865), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2023-04-13 16:32:54,038: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHTLEVEL', 'LIGHT_ON', 'LIGHT_OFF', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FBUMPED', 'BBUMPED', 'BUMPED_NOT', 'NUMBEROFEVENTS']
[DEBUG]2023-04-13 16:32:54,038: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHTLEVEL",
	"LIGHT_ON",
	"LIGHT_OFF",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FBUMPED",
	"BBUMPED",
	"BUMPED_NOT",
	"NUMBEROFEVENTS",
};


[DEBUG]2023-04-13 16:32:54,040: None
[DEBUG]2023-04-13 16:32:54,040: None
[DEBUG]2023-04-13 16:32:54,041: None
[DEBUG]2023-04-13 16:32:54,041: None
[DEBUG]2023-04-13 16:32:54,041: None
[DEBUG]2023-04-13 16:32:54,042: None
[DEBUG]2023-04-13 16:32:54,042: None
[DEBUG]2023-04-13 16:32:54,042: None
[DEBUG]2023-04-13 16:32:54,042: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,043: None
[DEBUG]2023-04-13 16:32:54,044: None
[DEBUG]2023-04-13 16:32:54,044: None
[DEBUG]2023-04-13 16:32:54,044: None
[DEBUG]2023-04-13 16:32:54,044: None
[DEBUG]2023-04-13 16:32:54,044: None
[DEBUG]2023-04-13 16:32:54,044: None
[DEBUG]2023-04-13 16:32:54,044: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,045: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,046: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,047: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,048: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,049: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,051: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,052: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,053: None
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,054: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,055: ['InitPState', 'FirstState']
[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,056: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,057: <re.Match object; span=(1587, 1703), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: ['InitPSubState', 'SubFirstState', 'SubSecondState', 'SubThirdState']
[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,058: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"SubSecondState",
	"SubThirdState",
};


[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
[DEBUG]2023-04-13 16:32:54,060: None
